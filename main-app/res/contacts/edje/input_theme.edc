/*
 * Copyright (c) 2009-2015 Samsung Electronics Co., Ltd All Rights Reserved
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

#define CT_INPUT_PADDING_LEFT_SIZE					42
#define CT_INPUT_PADDING_RIGHT_SIZE					10
#define CT_INPUT_IMAGE_SIZE 						166 166
#define CT_INPUT_LABEL_OFFSET 						0 32
#define CT_INPUT_BUTTONS_OFFSET 					0 27
#define CT_INPUT_BASE_INFO_PADDING_TOP_BOTTOM_SIZE	8
#define CT_INPUT_MIN_HEIGHT							120
#define CT_INPUT_MIN_WIDTH							144
#define CT_INPUT_BUTTON_DROPDOWN_MIN_HEIGHT			100

collections
{
	base_scale: 2.6;
	plugins {
		plugin {
			name: "touch_sound";
			source: "feedback";
			param: "FEEDBACK_TYPE_SOUND FEEDBACK_PATTERN_TAP";
		}
	}

	group {
		name: "elm/genlist/item/baseinfo.contract/default";
		alias: "elm/genlist/item_compress/baseinfo.contract/default";
		alias: "elm/genlist/tree/baseinfo.contract/default";
		alias: "elm/genlist/tree_compress/baseinfo.contract/default";

		data.item: "contents" "elm.icon.1 elm.icon.2 elm.name.label";

		parts {
			LIST_PART_BG
			PART(SPACER, "elm.padding.top",
				DSC_FROM_T("default" 0.0,
					min: 0 CT_INPUT_BASE_INFO_PADDING_TOP_BOTTOM_SIZE;
					max: -1 CT_INPUT_BASE_INFO_PADDING_TOP_BOTTOM_SIZE;
				)
			)
			PART(SPACER, "elm.padding.bottom",
				DSC_FROM_B("default" 0.0,
					min: 0 CT_INPUT_BASE_INFO_PADDING_TOP_BOTTOM_SIZE;
					max: -1 CT_INPUT_BASE_INFO_PADDING_TOP_BOTTOM_SIZE;
				)
			)
			PART(SPACER, "elm.padding.left",
				DSC_FROM_L("default" 0.0,
					min: CT_INPUT_PADDING_LEFT_SIZE 0;
					max: CT_INPUT_PADDING_LEFT_SIZE -1;
				)
			)
			PART(SPACER, "elm.padding.right",
				DSC_FROM_R("default" 0.0,
					min: CT_INPUT_PADDING_RIGHT_SIZE 0;
					max: CT_INPUT_PADDING_RIGHT_SIZE -1;
				)
			)
			PART(SWALLOW, "elm.icon.2",
				DSC_TB("default" 0.0,
					"elm.padding.top", "elm.padding.bottom",
					align: 0.5 0.0;
					min: CT_INPUT_IMAGE_SIZE;
					max: CT_INPUT_IMAGE_SIZE;
				)
			)
			PART(SWALLOW, "elm.name.label",
				DSC_LT("default" 0.0,
					"elm.padding.left", "elm.icon.2",
					align: 0.0 0.0;
					min: CT_INPUT_MIN_WIDTH 0;
					max: CT_INPUT_MIN_WIDTH -1;
					rel1.offset: CT_INPUT_LABEL_OFFSET;
				)
			)
			PART(SWALLOW, "elm.icon.1",
				DSC_LRTB("default" 0.0,
					"elm.name.label", "elm.padding.right", "elm.icon.2", "elm.padding.bottom",
					align: 0.0 0.0;
				)
			)
		}
	}

	group {
		name: "elm/genlist/item/baseinfo.expand/default";
		alias: "elm/genlist/item_compress/baseinfo.expand/default";
		alias: "elm/genlist/tree/baseinfo.expand/default";
		alias: "elm/genlist/tree_compress/baseinfo.expand/default";
		inherit: "elm/genlist/item/baseinfo.contract/default";

		parts {
			PART(SPACER, "elm.padding.bottom",
				DSC_FROM_B("default" 0.0,
					min: 0 0;
					max: -1 0;
				)
			)
		}
	}
	group {
		name: "baseinfo_sub_layout";
		data.item: "contents" "elm.icon.1 elm.icon.2";
		data.item: "banded_bg_area" "elm.swallow.bg";

		parts {
			PART(SWALLOW, "elm.swallow.bg",
				description { state: "default" 0.0;
				}
			)
			PART(SPACER, "elm.padding.left",
				DSC_FROM_L("default" 0.0,
					min: 0 0;
					max: 0 -1;
				)
			)
			PART(SWALLOW, "elm.icon.2",
				DSC_FROM_R("default" 0.0,
					align: 1.0 0.5;
					min: LIST_ENTRY_ICON_SIZE LIST_ENTRY_ICON_SIZE;
					max: LIST_ENTRY_ICON_SIZE LIST_ENTRY_ICON_SIZE;
				)
			)
			PART(SWALLOW, "elm.icon.1",
				DSC_LR("default" 0.0,
					"elm.padding.left", "elm.icon.2",
					align: 0.0 0.5;
				)
			)
		}
		programs{
			program {
				name: "play_sound";
				signal: "mouse,clicked,1";
				source: "elm.icon.2";
				action: RUN_PLUGIN "touch_sound";
			}
		}
	}
	group {
		name: "elm/genlist/item/input.3icon/default";
		alias: "elm/genlist/item_compress/input.3icon/default";
		alias: "elm/genlist/tree/input.3icon/default";
		alias: "elm/genlist/tree_compress/input.3icon/default";

		data.item: "contents" "elm.icon.1 elm.icon.entry elm.icon.2";
		data.item: "banded_bg_area" "elm.swallow.bg";

		parts {
			PART(SWALLOW, "elm.swallow.bg",
				description { state: "default" 0.0;
				}
			)
			PART(SPACER, "elm.padding.left",
				DSC_FROM_L("default" 0.0,
					min: CT_INPUT_PADDING_LEFT_SIZE 0;
					max: CT_INPUT_PADDING_LEFT_SIZE -1;
				)
			)
			PART(SPACER, "elm.icon.1.rect",
					DSC_L("default" 0.0, "elm.padding.left",
					min: CT_INPUT_MIN_WIDTH CT_INPUT_MIN_HEIGHT;
					max: CT_INPUT_MIN_WIDTH CT_INPUT_MIN_HEIGHT;
				)
			)
			PART(SWALLOW, "elm.icon.1",
					DSC_TO("default" 0.0, "elm.icon.1.rect",
						align: 0.0 0.0;
						min: CT_INPUT_MIN_WIDTH CT_INPUT_BUTTON_DROPDOWN_MIN_HEIGHT;
						max: CT_INPUT_MIN_WIDTH CT_INPUT_BUTTON_DROPDOWN_MIN_HEIGHT;
					)
			)
			PART(SPACER, "elm.icon.2.padding.right",
				DSC_FROM_R("default" 0.0,
					min: CT_INPUT_PADDING_RIGHT_SIZE 0;
					max: CT_INPUT_PADDING_RIGHT_SIZE -1;
				)
			)
			PART(SWALLOW, "elm.icon.2",
				DSC_R("default" 0.0,
					"elm.icon.2.padding.right",
					align: 1.0 0.5;
					min: LIST_ENTRY_ICON_SIZE;
					max: LIST_ENTRY_ICON_SIZE;
				)
			)
			PART(SWALLOW, "elm.icon.entry",
				DSC_LR("default" 0.0,
					"elm.icon.1.rect", "elm.icon.2",
					min: 0 CT_INPUT_MIN_HEIGHT;
				)
			)
		}
	}
	group {
		name: "elm/genlist/item/input.2icon/default";
		alias: "elm/genlist/item_compress/input.2icon/default";
		alias: "elm/genlist/tree/input.2icon/default";
		alias: "elm/genlist/tree_compress/input.2icon/default";
		data.item: "contents" "elm.icon.entry elm.icon.2";
		data.item: "banded_bg_area" "elm.swallow.bg";

		parts {
			PART(SWALLOW, "elm.swallow.bg",
				description { state: "default" 0.0;
				}
			)
			PART(SPACER, "elm.icon.entry.padding.left",
				DSC_FROM_L("default" 0.0,
					min: CT_INPUT_PADDING_LEFT_SIZE 0;
					max: CT_INPUT_PADDING_LEFT_SIZE -1;
				)
			)
			PART(SPACER, "elm.icon.2.padding.right",
				DSC_FROM_R("default" 0.0,
					min: CT_INPUT_PADDING_RIGHT_SIZE 0;
					max: CT_INPUT_PADDING_RIGHT_SIZE -1;
				)
			)
			PART(SWALLOW, "elm.icon.2",
				DSC_R("default" 0.0,
					"elm.icon.2.padding.right",
					align: 1.0 0.5;
					min: LIST_ENTRY_ICON_SIZE;
					max: LIST_ENTRY_ICON_SIZE;
				)
			)
			PART(SWALLOW, "elm.icon.entry",
				DSC_LR("default" 0.0,
					"elm.icon.entry.padding.left", "elm.icon.2",
					min: 0 CT_INPUT_MIN_HEIGHT;
					rel1 { relative: 0 0.0; to: "elm.swallow.bg"; }
				)
			)
		}
	}
	group {
		name: "elm/genlist/item/input.relationship/default";
		alias: "elm/genlist/item_compress/input.relationship/default";
		alias: "elm/genlist/tree/input.relationship/default";
		alias: "elm/genlist/tree_compress/input.relationship/default";
		inherit: "elm/genlist/item/input.3icon/default";
		data.item: "contents" "elm.icon.1 elm.icon.entry elm.icon.2 elm.icon.3";
		parts {
			PART(SPACER, "elm.icon.3.padding.reft",
				DSC_R("default" 0.0, "elm.icon.2",
					min: LIST_PADDING_DEFAULT_SIZE 0;
					max: LIST_PADDING_DEFAULT_SIZE -1;
				)
			)
			PART(SWALLOW, "elm.icon.3",
				DSC_R("default" 0.0,
					"elm.icon.3.padding.reft",
					align: 1.0 0.5;
					min: LIST_ENTRY_ICON_SIZE;
					max: LIST_ENTRY_ICON_SIZE;
				)
			)
			PART(SWALLOW, "elm.icon.entry",
				DSC_LR("default" 0.0,
					"elm.icon.1.rect", "elm.icon.3",
					min: 0 CT_INPUT_MIN_HEIGHT;
				)
			)
		}
	}
	group {
		name: "elm/genlist/item/input.4icon/default";
		alias: "elm/genlist/item_compress/input.4icon/default";
		alias: "elm/genlist/tree/input.4icon/default";
		alias: "elm/genlist/tree_compress/input.4icon/default";
		data.item: "contents" "elm.icon.1 elm.icon.2 elm.icon.3 elm.icon.4";
		data.item: "banded_bg_area" "elm.swallow.bg";

		parts {
			PART(SWALLOW, "elm.swallow.bg",
				description { state: "default" 0.0;
				}
			)
			PART(SWALLOW, "elm.icon.1",
				description { state: "default" 0.0;
					rel1 {relative: 0 0; offset: CT_INPUT_BUTTONS_OFFSET;}
					rel2 {relative: 0.25 1;}
				}
			)
			PART(SWALLOW, "elm.icon.2",
				description { state: "default" 0.0;
					rel1 {relative: 0.25 0; offset: CT_INPUT_BUTTONS_OFFSET;}
					rel2 {relative: 0.5 1;}
				}
			)
			PART(SWALLOW, "elm.icon.3",
				description { state: "default" 0.0;
					rel1 {relative: 0.5 0; offset: CT_INPUT_BUTTONS_OFFSET;}
					rel2 {relative: 0.75 1;}
				}
			)
			PART(SWALLOW, "elm.icon.4",
				description { state: "default" 0.0;
					rel1 {relative: 0.75 0; offset: CT_INPUT_BUTTONS_OFFSET;}
					rel2 {relative: 1 1;}
				}
			)
		}
	}
	group { name: "popup_input_text";
		parts {
			PART(SPACER, "elm.padding.left",
				DSC_FROM_L("default" 0.0,
					min: 15 0;
				)
			)
			PART(SPACER, "elm.padding.right",
				DSC_FROM_R("default" 0.0,
					min: 15 0;
				)
			)
			PART(SWALLOW, "elm.swallow.content",
				DSC_LR("default" 0.0,
					"elm.padding.left", "elm.padding.right",
					min: 0 POPUP_EDITFIELD_LAYOUT_MINMAX_HEIGHT_INC;
					max: -1 POPUP_EDITFIELD_LAYOUT_MINMAX_HEIGHT_INC;
					align: 0.5 0.5;
				)
			)
		}
	}
	group { name, "datetimePickerBg";

		parts {
			part { name, "bg";
				type, RECT;
				description {
					state, "default" 0.0;
					min:0 276;
					align: 0.0 0.0;
					color: 0 0 0 0;
				}
			}
			part {
				name, "top_padding";
				type, SPACER;
				description {
					state, "default" 0.0;
					rel2.relative, 1.0 0.0;
					min, 0 27;
					max, -1 27;
					fixed, 0 1;
					align, 0.5 0.0;
				}
			}
			part {
				name, "bottom_padding";
				type, SPACER;
				description {
					state, "default" 0.0;
					rel1.relative, 0.0 1.0;
					min, 0 27;
					max, -1 27;
					fixed, 0 1;
					align, 0.5 1.0;
				}
			}
			part { name, "elm.swallow.content";
				type, SWALLOW;
				description {
					state, "default" 0.0;
					rel1 {
						relative: 0.0 1.0;
						to: "top_padding";
					}
					rel2 {
						relative: 1.0 0.0;
						to: "bottom_padding";
					}
				}
			}
		}
	}
}
