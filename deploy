#!/bin/bash

usage()
{
    echo "Usage: `basename $0` [-h|--help] [-e|--emulator] [-d|--device]
    -h, --help      Show this message.
    -e, --emulator  Install on emulator (default).
    -d, --device    Install on device.
    -2, --tizen2    Install on Tizen 2.x (32-bit)
    -3, --tizen3    Install on Tizen 3.0 (64-bit, default)
    -r, --rpm       Install packages via RPM."
}

DEVS=($(sdb devices | tail -n+2))

if [ -z $DEVS ]
then
    echo "Please connect device or launch emulator."
    exit 1
fi

OPTS=$(getopt -o "hedr23" -l "help,emulator,tizen2,tizen3,device,rpm" -- "$@" 2> /dev/null)

if [ $? -ne 0 ]
then
    usage
    exit 1
fi

TARGET="e"
TIZEN="3"

for opt in $OPTS
do
    case $opt in
        -e|--emulator)
        TARGET="e"
        ;;
        -d|--device)
        TARGET="d"
        ;;
        -2|--tizen2)
        TIZEN="2"
        ;;
        -3|--tizen3)
        TIZEN="3"
        ;;
        -h|--help)
        usage
        exit 0
        ;;
        -r|--rpm)
        RPM=true
        ;;
    esac
done

if [ $TIZEN = "2" ]
then
    if [ $TARGET = "e" ]
    then
        ARCH="i586"
    else
        ARCH="armv7l"
    fi
else
    if [ $TARGET = "e" ]
    then
        ARCH="x86_64"
    else
        ARCH="aarch64"
    fi
fi

push()
{
    GBS=~/GBS-ROOT
    ROOT=$GBS/local/BUILD-ROOTS/scratch.$ARCH.0

    if [ ! -e $ROOT/*.conf ]
    then
        echo "Build root is not ready at $ROOT."
        exit 1
    fi

    REPO=$(basename $ROOT/*.conf)
    REPO=${REPO%.*}
    RPMS=$GBS/local/repos/$REPO/$ARCH/RPMS

    if [ ! -e "$RPMS/$1" ]
    then
        echo "Can't find $1 in $RPMS. Run build first."
        exit 1
    fi

    echo "Pushing $1 into $2..."
    sdb -$TARGET push "$RPMS/$1" "$2"  2> /dev/null
}

install()
{
    echo "Installing $2..."

    if [ $RPM ]
    then
        sdb -$TARGET root on
        sdb -$TARGET shell rpm -i --force "$1/$2"
        sdb -$TARGET shell pkg_initdb
        sdb -$TARGET root off
    else
        sdb -$TARGET shell pkgcmd -iqt rpm -p "$1/$2"
    fi
}

deploy()
{
    push "$1" "$2"
    install "$2" "$1"
    sdb -$TARGET shell rm "$2/$1" > /dev/null
}

DEST=/tmp
VER=$(grep Version: packaging/*.spec | awk '{print $2}')
REL=$(grep Release: packaging/*.spec | awk '{print $2}')
SUFFIX="$VER-$REL.$ARCH.rpm"

PKG=$(grep Name: packaging/*.spec | awk '{print $2}')
PKGS=($(grep %package packaging/*.spec | awk '{print $3}'))

if [ -z $PKGS ]
then
    deploy "$PKG-$SUFFIX" "$DEST"
else
    echo "Current package contains several sub-packages:"
    PKGS=($PKG ${PKGS[*]})
    for i in ${!PKGS[@]}
    do
        echo "$((i + 1)). ${PKGS[$i]}"
    done

    echo "Specify packages and order of installation (for example: 5 1):"
    read NUMS

    for i in $NUMS
    do
        deploy "${PKGS[$((i - 1))]}-$SUFFIX" "$DEST"
    done
fi
echo "Done."

